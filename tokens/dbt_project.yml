
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'tokenspoc'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'spellbook-poc-tokens'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
# analysis-paths: ["analyses"]
# test-paths: ["tests"]
# seed-paths: ["seeds"]
macro-paths: ["../macros"]
# snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  tokenspoc:
    +post-hook:
      - sql: "{{ set_trino_session_property(is_materialized(model), 'writer_scaling_min_data_processed', model.config.get('writer_min_size', '500MB')) }}"
        transaction: true
      - sql: "{{ set_trino_session_property(is_materialized(model), 'task_scale_writers_enabled', false) }}"
        transaction: true
      - sql: "{{ optimize_spell(this, model.config.materialized) }}"
        transaction: true
      - sql: "{{ mark_as_spell(this, model.config.materialized) }}"
        transaction: true
    +materialized: view
    +schema: no_schema    # this should be overriden in model specific configs
    +view_security: invoker
    tokens:
      +schema: tokens
      +materialized: table
      +file_format: delta
      ethereum:
        +schema: tokens_ethereum
        +materialized: table
        +file_format: delta
      